Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shiny::shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
}
######
setwd("C:/Users/teddy/Desktop/Shiny/ShiNyP GitHub/")
ShiNyP_ui = tagList(
CSS_UI(),
navbarPage(
title = HTML("<strong><em>ShiNyP</em></strong>"),
theme = bslib::bs_theme(bootswatch = "zephyr", bg = "#f3f1e5", fg = "#0C1844"),
Page_0_Home_UI(),
Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
######
######
library(shiny); library(shinyjs); library(ggplot2); library(RColorBrewer); library(ggthemes)
library(dplyr); library(data.table); library(adegenet); library(DT)
library(dartRverse); library(vctrs); library(sass); library(stringr); library(poppr)
library(ape); library(statgenGWAS); library(popkin); library(tidyr); library(circlize)
library(hierfstat); library(ggrepel); library(pcadapt);
library(fastmap); library(plotly); library(ggnewscale); library(ggtree)
library(ellmer); library(rmarkdown)
setwd("C:/Users/teddy/Desktop/Shiny/Code/0.1.1_dev")
source("Global.R")
source("Constants.R")
source("Functions.R")
source("CSS.R")
source("Page_0_Home.R")
source("Page_1_Data_Input.R")
source("Page_2_Data_QC.R")
source("Page_3_Data_Transform.R")
source("Page_4_Population_Structure.R")
source("Page_5_Genetic_Diversity.R")
source("Page_6_Selection_Sweep.R")
source("Page_7_Core_Collection.R")
source("Page_8_AI_Report.R")
######
#' Launch the ShiNyP Shiny app
#'
#' @export
run_ShiNyP = function() {
ShiNyP_ui = tagList(
CSS_UI(),
navbarPage(
title = HTML("<strong><em>ShiNyP</em></strong>"),
theme = bslib::bs_theme(bootswatch = "zephyr", bg = "#f3f1e5", fg = "#0C1844"),
Page_0_Home_UI(),
Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shiny::shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
}
######
setwd("C:/Users/teddy/Desktop/Shiny/ShiNyP GitHub/")
ShiNyP_ui = tagList(
CSS_UI(),
navbarPage(
title = HTML("<strong><em>ShiNyP</em></strong>"),
theme = bslib::bs_theme(bootswatch = "zephyr", bg = "#f3f1e5", fg = "#0C1844"),
Page_0_Home_UI(),
Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
######
######
library(shiny); library(shinyjs); library(ggplot2); library(RColorBrewer); library(ggthemes)
library(dplyr); library(data.table); library(adegenet); library(DT)
library(dartRverse); library(vctrs); library(sass); library(stringr); library(poppr)
library(ape); library(statgenGWAS); library(popkin); library(tidyr); library(circlize)
library(hierfstat); library(ggrepel); library(pcadapt);
library(fastmap); library(plotly); library(ggnewscale); library(ggtree)
library(ellmer); library(rmarkdown)
setwd("C:/Users/teddy/Desktop/Shiny/Code/0.1.1_dev")
source("Global.R")
source("Constants.R")
source("Functions.R")
source("CSS.R")
source("Page_0_Home.R")
source("Page_1_Data_Input.R")
source("Page_2_Data_QC.R")
source("Page_3_Data_Transform.R")
source("Page_4_Population_Structure.R")
source("Page_5_Genetic_Diversity.R")
source("Page_6_Selection_Sweep.R")
source("Page_7_Core_Collection.R")
source("Page_8_AI_Report.R")
######
#' Launch the ShiNyP Shiny app
#'
#' @export
run_ShiNyP = function() {
ShiNyP_ui = tagList(
CSS_UI(),
navbarPage(
title = HTML("<strong><em>ShiNyP</em></strong>"),
theme = bslib::bs_theme(bootswatch = "zephyr", bg = "#f3f1e5", fg = "#0C1844"),
Page_0_Home_UI(),
Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shiny::shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
}
######
setwd("C:/Users/teddy/Desktop/Shiny/ShiNyP GitHub/")
ShiNyP_ui = tagList(
CSS_UI(),
navbarPage(
title = HTML("<strong><em>ShiNyP</em></strong>"),
theme = bslib::bs_theme(bootswatch = "zephyr", bg = "#f3f1e5", fg = "#0C1844"),
Page_0_Home_UI(),
Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
######
library(shiny); library(shinyjs); library(ggplot2); library(RColorBrewer); library(ggthemes)
library(dplyr); library(data.table); library(adegenet); library(DT)
library(dartRverse); library(vctrs); library(sass); library(stringr); library(poppr)
library(ape); library(statgenGWAS); library(popkin); library(tidyr); library(circlize)
library(hierfstat); library(ggrepel); library(pcadapt);
library(fastmap); library(plotly); library(ggnewscale); library(ggtree)
library(ellmer); library(rmarkdown)
setwd("C:/Users/teddy/Desktop/Shiny/Code/0.1.1_dev")
source("Global.R")
source("Constants.R")
source("Functions.R")
source("CSS.R")
source("Page_0_Home.R")
source("Page_1_Data_Input.R")
source("Page_2_Data_QC.R")
source("Page_3_Data_Transform.R")
source("Page_4_Population_Structure.R")
source("Page_5_Genetic_Diversity.R")
source("Page_6_Selection_Sweep.R")
source("Page_7_Core_Collection.R")
source("Page_8_AI_Report.R")
######
#' Launch the ShiNyP Shiny app
#'
#' @export
run_ShiNyP = function() {
ShiNyP_ui = tagList(
CSS_UI(),
navbarPage(
title = HTML("<strong><em>ShiNyP</em></strong>"),
theme = bslib::bs_theme(bootswatch = "zephyr", bg = "#f3f1e5", fg = "#0C1844"),
Page_0_Home_UI(),
Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shiny::shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
}
######
setwd("C:/Users/teddy/Desktop/Shiny/ShiNyP GitHub/")
ShiNyP_ui = tagList(
CSS_UI(),
navbarPage(
title = HTML("<strong><em>ShiNyP</em></strong>"),
theme = bslib::bs_theme(bootswatch = "zephyr", bg = "#f3f1e5", fg = "#0C1844"),
Page_0_Home_UI(),
Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
######
######
library(shiny); library(shinyjs); library(ggplot2); library(RColorBrewer); library(ggthemes)
library(dplyr); library(data.table); library(adegenet); library(DT)
library(dartRverse); library(vctrs); library(sass); library(stringr); library(poppr)
library(ape); library(statgenGWAS); library(popkin); library(tidyr); library(circlize)
library(hierfstat); library(ggrepel); library(pcadapt);
library(fastmap); library(plotly); library(ggnewscale); library(ggtree)
library(ellmer); library(rmarkdown)
setwd("C:/Users/teddy/Desktop/Shiny/Code/0.1.1_dev")
source("Global.R")
source("Constants.R")
source("Functions.R")
source("CSS.R")
source("Page_0_Home.R")
source("Page_1_Data_Input.R")
source("Page_2_Data_QC.R")
source("Page_3_Data_Transform.R")
source("Page_4_Population_Structure.R")
source("Page_5_Genetic_Diversity.R")
source("Page_6_Selection_Sweep.R")
source("Page_7_Core_Collection.R")
source("Page_8_AI_Report.R")
######
#' Launch the ShiNyP Shiny app
#'
#' @export
run_ShiNyP = function() {
ShiNyP_ui = tagList(
CSS_UI(),
navbarPage(
title = HTML("<strong><em>ShiNyP</em></strong>"),
theme = bslib::bs_theme(bootswatch = "zephyr", bg = "#f3f1e5", fg = "#0C1844"),
Page_0_Home_UI(),
Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shiny::shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
}
######
setwd("C:/Users/teddy/Desktop/Shiny/ShiNyP GitHub/")
ShiNyP_ui = tagList(
CSS_UI(),
navbarPage(
title = HTML("<strong><em>ShiNyP</em></strong>"),
theme = bslib::bs_theme(bootswatch = "zephyr", bg = "#f3f1e5", fg = "#0C1844"),
Page_0_Home_UI(),
Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
######
######
library(shiny); library(shinyjs); library(ggplot2); library(RColorBrewer); library(ggthemes)
library(dplyr); library(data.table); library(adegenet); library(DT)
library(dartRverse); library(vctrs); library(sass); library(stringr); library(poppr)
library(ape); library(statgenGWAS); library(popkin); library(tidyr); library(circlize)
library(hierfstat); library(ggrepel); library(pcadapt);
library(fastmap); library(plotly); library(ggnewscale); library(ggtree)
library(ellmer); library(rmarkdown)
setwd("C:/Users/teddy/Desktop/Shiny/Code/0.1.1_dev")
source("Global.R")
source("Constants.R")
source("Functions.R")
source("CSS.R")
source("Page_0_Home.R")
source("Page_1_Data_Input.R")
source("Page_2_Data_QC.R")
source("Page_3_Data_Transform.R")
source("Page_4_Population_Structure.R")
source("Page_5_Genetic_Diversity.R")
source("Page_6_Selection_Sweep.R")
source("Page_7_Core_Collection.R")
source("Page_8_AI_Report.R")
######
#' Launch the ShiNyP Shiny app
#'
#' @export
run_ShiNyP = function() {
ShiNyP_ui = tagList(
CSS_UI(),
navbarPage(
title = HTML("<strong><em>ShiNyP</em></strong>"),
theme = bslib::bs_theme(bootswatch = "zephyr", bg = "#f3f1e5", fg = "#0C1844"),
Page_0_Home_UI(),
Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shiny::shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
}
######
setwd("C:/Users/teddy/Desktop/Shiny/ShiNyP GitHub/")
ShiNyP_ui = tagList(
CSS_UI(),
navbarPage(
title = HTML("<strong><em>ShiNyP</em></strong>"),
theme = bslib::bs_theme(bootswatch = "zephyr", bg = "#f3f1e5", fg = "#0C1844"),
Page_0_Home_UI(),
Page_1_Data_Input_UI(),
Page_2_Data_QC_UI(),
Page_3_Data_Transform_UI(),
Page_4_Population_Structure_UI(),
Page_5_Genetic_Diversity_UI(),
Page_6_Selection_Sweep_UI(),
Page_7_Core_Collection_UI(),
Page_8_AI_Report_UI()
)
)
ShiNyP_server = function(input, output, session) {
Page_0_Home_Server(input, output, session)
Page_1_Data_Input_Server(input, output, session)
Page_2_Data_QC_Server(input, output, session)
Page_3_Data_Transform_Server(input, output, session)
Page_4_Population_Structure_Server(input, output, session)
Page_5_Genetic_Diversity_Server(input, output, session)
Page_6_Selection_Sweep_Server(input, output, session)
Page_7_Core_Collection_Server(input, output, session)
Page_8_AI_Report_Server(input, output, session)
}
shinyApp(ui = ShiNyP_ui, server = ShiNyP_server)
######
##
detach("package:ShiNyP", unload = TRUE)
remove.packages("ShiNyP")
## Step 2: Install the ShiNyP Package from GitHub
install.packages("remotes")
install.packages("remotes")
remotes::install_github("TeddYenn/ShiNyP", force = TRUE)
remotes::install_github("TeddYenn/ShiNyP", force = TRUE)
## Step 3: Start the ShiNyP Platform
library(ShiNyP)
## Step 3: Start the ShiNyP Platform
library(ShiNyP)
ShiNyP::run_ShiNyP()
detach("package:ShiNyP", unload = TRUE)
# Start the ShiNyP Platform Again
library(ShiNyP)
library(ggplot2)
## Step 3: Start the ShiNyP Platform
library(ShiNyP)
ShiNyP::run_ShiNyP()
## Step 3: Start the ShiNyP Platform
library(ShiNyP)
library(plotly)
detach("package:plotly", unload = TRUE)
